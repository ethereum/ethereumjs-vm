version: 2

aliases: 
  - &defaults
    working_directory: ~/project/ethereumjs-vm
    docker:
      - image: circleci/node:8-browsers

  - &restore_node_modules
    restore_cache:
      name: Restore node_modules cache
      keys:
        - v1-node-{{ .Branch }}-{{ checksum "package.json" }}
        - v1-node-{{ checksum "package.json" }}

  - &convert_tap_to_xunit
    run: 
      name: convert TAP results to xunit format
      command:  |
        mkdir -p tests/tape;
        cat results.tap | npx tap-xunit > tests/tape/results.xml
      when: always

  - &save_test_metadata
    store_test_results:
      path: tests/tape/

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - *restore_node_modules
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          name: Save node_modules cache
          key: v1-node-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules/
      - persist_to_workspace:
          root: ~/project
          paths:
            - ethereumjs-vm/

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: Lint
          command: npm run lint

  test_api:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: testAPI
          command: npm run testAPI

  test_api_browser:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: testAPI:browser
          command: npm run testAPI:browser
  
  test_state_byzantium:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: testStateByzantium
          command: npm run testStateByzantium | tee -a results.tap
      - *convert_tap_to_xunit
      - *save_test_metadata

  test_state_constantinople:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: testStateConstantinople
          command: npm run testStateConstantinople | tee -a results.tap
      - *convert_tap_to_xunit
      - *save_test_metadata

  test_state_petersburg:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: testStatePetersburg
          command: npm run testStatePetersburg | tee -a results.tap
      - *convert_tap_to_xunit
      - *save_test_metadata

  test_state_istanbul:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: testStateIstanbul
          command: npm run testStateIstanbul | tee -a results.tap
      - *convert_tap_to_xunit
      - *save_test_metadata

  test_blockchain:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: testBlockchain
          command: npm run testBlockchain | tee -a results.tap
      - *convert_tap_to_xunit
      - *save_test_metadata

  test_blockchain_petersburg:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: testBlockchainPetersburg
          command: npm run testBlockchainPetersburg | tee -a results.tap
      - *convert_tap_to_xunit
      - *save_test_metadata
  coveralls:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: coveralls
          command: npm run coveralls
workflows:
  version: 2
  install-lint-test:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test_api:
          requires:
            - install
      - test_api_browser:
          requires:
            - install
      - test_state_byzantium:
          requires:
            - install
      - test_state_constantinople:
          requires:
            - install
      - test_state_petersburg:
          requires:
            - install
      - test_state_istanbul:
          requires:
            - install
      - test_blockchain:
          requires:
            - install
      - test_blockchain_petersburg:
          requires:
            - install
      - coveralls:
          requires:
            - install
